// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.112.0/containers/docker-existing-dockerfile
{
	"name": "DevBox-image-search",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "../src",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../src/Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/zsh"
	},
	// Note: Modify mounts as needed (not sure how to dynamically inject correct options here???)
	"mounts": [
		"source=/home/benjamin/.cache/torch,target=/home/user/.cache/torch,type=bind,consistency=cached", 
		"source=/home/benjamin/.aws,target=/home/user/.aws,type=bind,consistency=cached",
		"source=/home/benjamin/.cache/pypoetry,target=/home/user/.cache/pypoetry,type=bind,consistency=cached"
	  ],
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.python",
		"mutantdino.resourcemonitor",
		"njpwerner.autodocstring",
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [8000],

	// Uncomment the next line to run commands after the container is created - for example installing git.
	// "postCreateCommand": "apt-get update && apt-get install -y git",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": ["--net=host", "-e DISPLAY=:0", "--gpus all"],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
